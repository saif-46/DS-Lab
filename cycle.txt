#include<bits/stdc++.h>
using namespace std;
vector<int>vec[1001];
int visit[1001];

bool dfs(int node, int par)
{
    visit[node]=1;

    for(int i=0;i<vec[node].size();i++)
    {
        int child=vec[node][i];
        if(visit[child]==0)
        {
              if(dfs(child,node)==1) return 1;
        }

        else {
            if(child!=par) return true;
        }
    }
    return false;
}
int main()
{
    int n,m,u,v,q;
    cin>>n>>m;

    for(int i=0;i<m;i++)
    {
        cin>>u>>v;
        vec[u].push_back(v);
        vec[v].push_back(u);

    }
    int cnt=0;
    for(int i=0;i<n;i++)
    {
       if(visit[i]==0) dfs(i,-1);
       cnt++;
    }

    cout<<cnt<<endl;
}
